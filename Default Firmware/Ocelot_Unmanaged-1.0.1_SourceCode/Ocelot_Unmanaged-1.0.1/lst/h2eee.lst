C51 COMPILER V9.60.0.0   H2EEE                                                             11/30/2021 16:22:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE H2EEE
OBJECT MODULE PLACED IN ..\obj\h2eee.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\src\switch\h2eee.c LARGE OPTIMIZE(9,SIZE) INCDIR(c:\keil\c51\inc\winb
                    -ond;..\src\config;..\src\config\proj_opt;..\src\cli;..\src\main;..\src\switch;..\src\phy;..\src\util;..\src\switch\vtss_
                    -api\base;..\src\switch\vtss_api\base\ocelot;..\src\switch\include;..\src\lldp;..\src\snmp;..\src\sw_lacp;..\src\eee;..\s
                    -rc\eee\base\include;..\src\fan;..\src\led;..\src\loop) DEFINE(VTSS_ARCH_OCELOT,FERRET_F5,PROJ_OPT=0) DEBUG OBJECTEXTEND 
                    -PRINT(..\lst\h2eee.lst) TABS(2) OBJECT(..\obj\h2eee.obj)

line level    source

   1          /*
   2          
   3           Copyright (c) 2017 Microsemi Corporation "Microsemi".
   4          
   5           Permission is hereby granted, free of charge, to any person obtaining a copy
   6           of this software and associated documentation files (the "Software"), to deal
   7           in the Software without restriction, including without limitation the rights
   8           to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9           copies of the Software, and to permit persons to whom the Software is
  10           furnished to do so, subject to the following conditions:
  11          
  12           The above copyright notice and this permission notice shall be included in all
  13           copies or substantial portions of the Software.
  14          
  15           THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16           IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17           FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18           AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19           LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20           OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  21           SOFTWARE.
  22          
  23          */
  24          
  25          #include "common.h"     /* Always include common.h at the first place of user-defined herder files */
  26          #include "timer.h"
  27          #include "misc2.h"
  28          #include "h2io.h"
  29          #include "vtss_api_base_regs.h"
  30          #include "h2eee.h"
  31          #include "print.h"
  32          #include "phydrv.h"
  33          
  34          #if TRANSIT_EEE
              
              /*****************************************************************************
               *
               *
               * Defines
               *
               *
               *
               ****************************************************************************/
              
              /*****************************************************************************
               *
               *
               * Typedefs and enums
               *
               *
               *
C51 COMPILER V9.60.0.0   H2EEE                                                             11/30/2021 16:22:20 PAGE 2   

               ****************************************************************************/
              
              /*****************************************************************************
               *
               *
               * Public data
               *
               *
               *
               ****************************************************************************/
              
              /*****************************************************************************
               *
               *
               * Prototypes for local functions
               *
               *
               *
               ****************************************************************************/
              #if 0
              static uchar dec16hex(ushort value);
              #endif
              /*****************************************************************************
               *
               *
               * Local data
               *
               *
               *
               ****************************************************************************/
              
              /*****************************************************************************
               *
               *
               * Luton26 802.3az functions
               *
               *
               *
               ****************************************************************************/
              
              
              /* =================================================================
               *  EEE - Energy Efficient Ethernet
               * =================================================================
               * Set EEE configuration
               *
               * In :  port - The iport number for which to set new configuration.
               *       conf  - New configuration for the port
               *
               * Return : None
               * =================================================================
               */
              #if defined(VTSS_ARCH_OCELOT) 
              void h2_eee_port_conf_set(const vtss_cport_no_t chip_port,
                                        const eee_port_conf_t * const conf) {
              
                  ulong E, time;
                  ulong eee_cfg_reg = 0x0; // SYS::EEE_CFG register value.
              
                  // EEE enable
                  if (conf->eee_ena) {
                      //LPI is really an old error code redefined to tell the link partner to go to
C51 COMPILER V9.60.0.0   H2EEE                                                             11/30/2021 16:22:20 PAGE 3   

                      // lower power or when removed to wakeup.
                      // Some devices are seeing the error code and assuming there is a
                      // problem causing the link to go down. A work around is to only enable EEE in the MAC (No LPI sig
             -nal to the PHY)
                      // when the PHY has auto negotiated and have found that the link partner supports EEE.
                      if (conf->lp_advertisement == 0) {
                          // Link partner doesn't support EEE - Keeping EEE disabled
                      } else {
                          eee_cfg_reg |= VTSS_F_DEV_PORT_MODE_EEE_CFG_EEE_ENA(1);
                      }
                  }
              
                  // EEE wakeup timer (See datasheet for understanding calculation)
                  time = conf->tx_tw;
                  E = 0;
                  while (time > 16) {
                      E++;
                      time /= 4;
                  }
              
                  time += 1; // Round up to make sure that we always have longer wakeup time.
                  eee_cfg_reg |= VTSS_F_DEV_PORT_MODE_EEE_CFG_EEE_TIMER_WAKEUP(E*16+time);
              
              
                  // EEE holdoff timer
                  eee_cfg_reg |= VTSS_F_DEV_PORT_MODE_EEE_CFG_EEE_TIMER_HOLDOFF(0x5) | VTSS_F_DEV_PORT_MODE_EEE_CFG_EEE_
             -TIMER_AGE(0x23);
              
                  // EEE fast queues
                  eee_cfg_reg |= VTSS_F_QSYS_SYSTEM_EEE_CFG_EEE_FAST_QUEUES(conf->eee_fast_queues);
              
                  // Registers write
                  H2_WRITE(VTSS_QSYS_SYSTEM_EEE_CFG(chip_port),eee_cfg_reg);
              
                  // Setting Buffer size to 3 Kbyte & 255 frames.
                  H2_WRITE(VTSS_QSYS_SYSTEM_EEE_THRES, 0x3EFF);
              
              }
              #elif defined(VTSS_ARCH_LUTON26)
              void h2_eee_port_conf_set(const vtss_cport_no_t chip_port,
                                        const eee_port_conf_t * const conf) {
              
                  ulong E, time;
                  ulong eee_cfg_reg = 0x0; // SYS::EEE_CFG register value.
              
                  // EEE enable
                  if (conf->eee_ena) {
                      //LPI is really an old error code redefined to tell the link partner to go to
                      // lower power or when removed to wakeup.
                      // Some devices are seeing the error code and assuming there is a
                      // problem causing the link to go down. A work around is to only enable EEE in the MAC (No LPI sig
             -nal to the PHY)
                      // when the PHY has auto negotiated and have found that the link partner supports EEE.
                      if (conf->lp_advertisement == 0) {
                          // Link partner doesn't support EEE - Keeping EEE disabled
                      } else {
                          eee_cfg_reg |= VTSS_F_SYS_SYSTEM_EEE_CFG_EEE_ENA;
                      }
                  }
              
                  // EEE wakeup timer (See datasheet for understanding calculation)
                  time = conf->tx_tw;
C51 COMPILER V9.60.0.0   H2EEE                                                             11/30/2021 16:22:20 PAGE 4   

                  E = 0;
                  while (time > 16) {
                      E++;
                      time /= 4;
                  }
              
                  time += 1; // Round up to make sure that we always have longer wakeup time.
                  eee_cfg_reg |= VTSS_F_SYS_SYSTEM_EEE_CFG_EEE_TIMER_WAKEUP(E*16+time);
              
              
                  // EEE holdoff timer
                  eee_cfg_reg |= VTSS_F_SYS_SYSTEM_EEE_CFG_EEE_TIMER_HOLDOFF(0x5) | VTSS_F_SYS_SYSTEM_EEE_CFG_EEE_TIMER_
             -AGE(0x23);
              
                  // EEE fast queues
                  eee_cfg_reg |= VTSS_F_SYS_SYSTEM_EEE_CFG_EEE_FAST_QUEUES(conf->eee_fast_queues);
              
                  // Registers write
                  H2_WRITE(VTSS_SYS_SYSTEM_EEE_CFG(chip_port),eee_cfg_reg);
              
                  // Setting Buffer size to 3 Kbyte & 255 frames.
                  H2_WRITE(VTSS_SYS_SYSTEM_EEE_THRES, 0x3EFF);
              
              }
              #endif
              
              #if 0
              static uchar dec16hex(ushort value)
              {
                  const ushort perm4[8] = {1, 4, 16, 64, 256, 1024, 4096, 16384};
                  uchar i, j;
                  uchar idx = 0, jdx = 0;
                  for(i = 0; i < 8; i++) {
                      if(perm4[i] >= value) {
                          idx = i - 1;
                          break;
                      }
                  }
                  for(j = 0; j < 16; j++) {
                      if(perm4[idx]*j == value) {
                          jdx = j;
                          break;
                      }
                      if(perm4[idx]*j > value) {
                          jdx = j - 1;
                          break;
                      }
                  }
                  return (idx << 4) | jdx;
              }
              #endif
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.60.0.0   H2EEE                                                             11/30/2021 16:22:20 PAGE 5   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
