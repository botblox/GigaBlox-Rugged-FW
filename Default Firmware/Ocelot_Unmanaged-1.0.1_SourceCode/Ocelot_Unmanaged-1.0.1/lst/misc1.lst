C51 COMPILER V9.60.0.0   MISC1                                                             11/30/2021 16:22:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MISC1
OBJECT MODULE PLACED IN ..\obj\misc1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\src\util\misc1.c LARGE OPTIMIZE(9,SIZE) INCDIR(c:\keil\c51\inc\winbon
                    -d;..\src\config;..\src\config\proj_opt;..\src\cli;..\src\main;..\src\switch;..\src\phy;..\src\util;..\src\switch\vtss_ap
                    -i\base;..\src\switch\vtss_api\base\ocelot;..\src\switch\include;..\src\lldp;..\src\snmp;..\src\sw_lacp;..\src\eee;..\src
                    -\eee\base\include;..\src\fan;..\src\led;..\src\loop) DEFINE(VTSS_ARCH_OCELOT,FERRET_F5,PROJ_OPT=0) DEBUG OBJECTEXTEND PR
                    -INT(..\lst\misc1.lst) TABS(2) OBJECT(..\obj\misc1.obj)

line level    source

   1          /*
   2          
   3           Copyright (c) 2017 Microsemi Corporation "Microsemi".
   4          
   5           Permission is hereby granted, free of charge, to any person obtaining a copy
   6           of this software and associated documentation files (the "Software"), to deal
   7           in the Software without restriction, including without limitation the rights
   8           to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9           copies of the Software, and to permit persons to whom the Software is
  10           furnished to do so, subject to the following conditions:
  11          
  12           The above copyright notice and this permission notice shall be included in all
  13           copies or substantial portions of the Software.
  14          
  15           THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16           IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17           FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18           AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19           LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20           OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  21           SOFTWARE.
  22          
  23          */
  24          #include <string.h>
  25          
  26          #include "common.h"     /* Always include common.h at the first place of user-defined herder files */
  27          #include "misc1.h"
  28          #include "misc2.h"
  29          #include "misc3.h"
  30          #include "hwport.h"
  31          
  32          #if !defined(BRINGUP)
  33          #if TRANSIT_LLDP
              /* ************************************************************************ */
              uchar xmemcmp(const uchar xdata *dst, const uchar xdata *src, ushort length)
              /* ------------------------------------------------------------------------ --
               * Purpose     : Compare two memory blocks
               * Remarks     :
               * Restrictions:
               * See also    :
               * Example     :
               ****************************************************************************/
              {
                  uchar xdata *p_dst;
                  uchar xdata *p_src;
                  ushort count;
                  uchar  ret;
                  p_dst = dst;
                  p_src = src;
                  count = length;
              
C51 COMPILER V9.60.0.0   MISC1                                                             11/30/2021 16:22:26 PAGE 2   

                  ret = 0;
                  while(ret == 0 && count != 0) {
                      if(count > 255) {
                          ret = mem_cmp(p_dst, p_src, 255);
                          p_dst += 255;
                          p_src += 255;
                          count -= 255;
                      } else {
                          ret = mem_cmp(p_dst, p_src, count);
                          count -= count;
                      }
                  }
                  return ret;
              }
              #endif // TRANSIT_LLDP
  67          #endif /* !BRINGUP */
  68          
  69          #ifndef NO_DEBUG_IF
  70          /* ************************************************************************ */
  71          uchar ascii_to_hex_nib (uchar ch)
  72          /* ------------------------------------------------------------------------ --
  73           * Purpose     : Convert an ASCII hex digit to a hex digit.
  74           * Remarks     :
  75           * Restrictions:
  76           * See also    :
  77           * Example     :
  78           ****************************************************************************/
  79          {
  80   1          ch = conv_to_upper_case(ch);
  81   1      
  82   1          if (('0' <= ch) && (ch <= '9')) {
  83   2              return (ch - '0');
  84   2          } else if (('A' <= ch) && (ch <= 'F')) {
  85   2              return (ch - 'A' + 10);
  86   2          } else {
  87   2              return 0xff;
  88   2          }
  89   1      }
  90          
  91          /* ************************************************************************ */
  92          uchar hex_to_ascii_nib (uchar nib)
  93          /* ------------------------------------------------------------------------ --
  94           * Purpose     : Convert a hex nibble in binary (0-f) to ASCII.
  95           * Remarks     : nib holds nibble to convert (must be in range 0-f).
  96           * Restrictions:
  97           * See also    :
  98           * Example     :
  99           ****************************************************************************/
 100          {
 101   1          if (nib < 10) {
 102   2              return nib + '0';
 103   2          } else {
 104   2              return (nib - 10) + 'a';
 105   2          }
 106   1      }
 107          
 108          /* ************************************************************************ */
 109          char conv_to_upper_case (char ch)
 110          /* ------------------------------------------------------------------------ --
 111           * Purpose     : Convert a char to upper case.
 112           * Remarks     :
 113           * Restrictions:
C51 COMPILER V9.60.0.0   MISC1                                                             11/30/2021 16:22:26 PAGE 3   

 114           * See also    :
 115           * Example     :
 116           ****************************************************************************/
 117          {
 118   1          if (('a' <= ch) && (ch <= 'z')) {
 119   2              return (ch - 0x20);
 120   2          } else {
 121   2              return ch;
 122   2          }
 123   1      }
 124          
 125          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     93    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
