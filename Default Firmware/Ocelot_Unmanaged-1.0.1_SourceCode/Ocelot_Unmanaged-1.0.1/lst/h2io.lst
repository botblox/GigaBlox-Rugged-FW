A51 MACRO ASSEMBLER  H2IO                                                                 11/30/2021 16:22:20 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN ..\obj\h2io.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE ..\src\switch\h2io.a51 INCDIR(..\src\config) SET(LARGE) DEBUG PRINT(..\
                      lst\h2io.lst) OBJECT(..\obj\h2io.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;*
                       2     ;*
                       3     ;* Copyright (c) 2017 Microsemi Corporation "Microsemi".
                       4     ;*
                       5     ;* Permission is hereby granted, free of charge, to any person obtaining a copy
                       6     ;* of this software and associated documentation files (the "Software"), to deal
                       7     ;* in the Software without restriction, including without limitation the rights
                       8     ;* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                       9     ;* copies of the Software, and to permit persons to whom the Software is
                      10     ;* furnished to do so, subject to the following conditions:
                      11     ;*
                      12     ;* The above copyright notice and this permission notice shall be included in all
                      13     ;* copies or substantial portions of the Software.
                      14     ;*
                      15     ;* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                      16     ;* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                      17     ;* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                      18     ;* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                      19     ;* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                      20     ;* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                      21     ;* SOFTWARE.
                      22     ;*
                      23     ;*
                      24     ;*
                      25     
                      26     $nomod51 
                      27     ;$include (REG52.INC)
                +1    28     ;-------------------------------------------------------------------------------
                +1    29     ; Copyright 1995-1996 KEIL Software, Inc.
                +1    30     ; 8052 Processor Declarations
                +1    31     ;-------------------------------------------------------------------------------
                +1    32  +1 $save 
                +1   133  +1 $restore 
                +1   134     
                     135     
                     136     ;$include (hwconf.inc)
                +1   137     ;*
                +1   138     ;*
                +1   139     ;* Copyright (c) 2017 Microsemi Corporation "Microsemi".
                +1   140     ;*
                +1   141     ;* Permission is hereby granted, free of charge, to any person obtaining a copy
                +1   142     ;* of this software and associated documentation files (the "Software"), to deal
                +1   143     ;* in the Software without restriction, including without limitation the rights
                +1   144     ;* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                +1   145     ;* copies of the Software, and to permit persons to whom the Software is
                +1   146     ;* furnished to do so, subject to the following conditions:
                +1   147     ;*
                +1   148     ;* The above copyright notice and this permission notice shall be included in all
                +1   149     ;* copies or substantial portions of the Software.
                +1   150     ;*
                +1   151     ;* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                +1   152     ;* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                +1   153     ;* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                +1   154     ;* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                +1   155     ;* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                +1   156     ;* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                +1   157     ;* SOFTWARE.
A51 MACRO ASSEMBLER  H2IO                                                                 11/30/2021 16:22:20 PAGE     2

                +1   158     ;*
                +1   159     ;*
                +1   160     ;*
                +1   161     
                +1   162     ;* ************************************************************************ **
                +1   163     ;*
                +1   164     ;*
                +1   165     ;* Internal 8051 registers
                +1   166     ;*
                +1   167     ;* Below is the list of Special Function Registers (SFR).
                +1   168     ;*
                +1   169     ;*
                +1   170     ;* ************************************************************************ */
                +1   171     
  0080          +1   172                     GPR             DATA    080H
  00B0          +1   173                     PAGE_SEL        DATA    0B0H
  00C0          +1   174                     EPAGE_SEL       DATA    0C0H
  00F2          +1   175                     MMAP            DATA    0F2H
  00F4          +1   176                     RA_CTRL         DATA    0F4H
  00F6          +1   177                     RA_AD0_RD       DATA    0F6H
  00F7          +1   178                     RA_AD0_WR       DATA    0F7H
  00F9          +1   179                     RA_AD1          DATA    0F9H
  00FA          +1   180                     RA_AD2          DATA    0FAH
  00FB          +1   181                     RA_AD3          DATA    0FBH
  00FC          +1   182                     RA_DA0          DATA    0FCH
  00FD          +1   183                     RA_DA1          DATA    0FDH
  00FE          +1   184                     RA_DA2          DATA    0FEH
  00FF          +1   185                     RA_DA3          DATA    0FFH
                +1   186     
                +1   187                     ; Paging bits
  00B0          +1   188                     PG_OP_0         BIT     0B0H
  00B1          +1   189                     PG_OP_1         BIT     0B1H
  00B2          +1   190                     PG_OP_2         BIT     0B2H
  00B3          +1   191                     PG_OP_3         BIT     0B3H
  00B4          +1   192                     PG_IFP_0        BIT     0B4H
  00B5          +1   193                     PG_IFP_1        BIT     0B5H
  00B6          +1   194                     PG_IFP_2        BIT     0B6H
  00B7          +1   195                     PG_IFP_3        BIT     0B7H
                +1   196     
                +1   197                     ; General Purpose Regiser bits
  0080          +1   198                     GPR_0           BIT     080H
  0081          +1   199                     GPR_1           BIT     081H
  0082          +1   200                     GPR_2           BIT     082H
  0083          +1   201                     GPR_3           BIT     083H
  0084          +1   202                     GPR_4           BIT     084H
  0085          +1   203                     GPR_5           BIT     085H
  0086          +1   204                     GPR_6           BIT     086H
  0087          +1   205                     GPR_7           BIT     087H
                +1   206     
                +1   207     ;* ************************************************************************ **
                +1   208     ;*
                +1   209     ;*
                +1   210     ;* Select chip interface
                +1   211     ;*
                +1   212     ;* Define which chip interface to use, either 8-bit parallel interface, SI
                +1   213     ;* interface or SFR interface.
                +1   214     ;*
                +1   215     ;* Set USE_PI to 1 to use 8-bit interface, otherwise set USE_PI to 0.
                +1   216     ;* Set USE_SI to 1 to use SI interface, otherwise set USE_SI to 0.
                +1   217     ;* Set USE_SFR to 1 to use SFR interface, otherwise set USE_SFR to 0.
                +1   218     ;* Set BOOT_VIA_SPI to 1 to boot from SPI Flash, otherwise set BOOT_VIA_SPI to 0.
                +1   219     ;*
                +1   220     ;*
                +1   221     ;* ************************************************************************ */
                +1   222     
                +1   223                     ; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
A51 MACRO ASSEMBLER  H2IO                                                                 11/30/2021 16:22:20 PAGE     3

                +1   224                     ; ! Please, keep c-file hwconf.h updated accordingly !
                +1   225                     ; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                +1   226                     $set  (USE_PI  = 0)
                +1   227                     $set  (USE_SI  = 0)
                +1   228                     $set  (USE_SFR = 1)
                +1   229                     $set  (BOOT_VIA_SPI = 1)
                +1   230     
                +1   231     ;* ************************************************************************ **
                +1   232     ;*
                +1   233     ;*
                +1   234     ;* SPI configuration
                +1   235     ;*
                +1   236     ;*
                +1   237     ;*
                +1   238     ;* ************************************************************************ */
                +1   239     
                +1   240                     ; SPI pins
  0094          +1   241                     SS              BIT     094H    ; P1^4
  0095          +1   242                     MOSI            BIT     095H    ; P1^5
  0096          +1   243                     MISO            BIT     096H    ; P1^6
  0097          +1   244                     SCK             BIT     097H    ; P1^7
                +1   245     
                +1   246                     ; SPI registers present if the controller is e.g. a SST89V564
  00D5          +1   247                     SPCR            DATA    0D5H
  00AA          +1   248                     SPSR            DATA    0AAH
  0086          +1   249                     SPDR            DATA    086H
                +1   250     
                +1   251     SPI_DELAY_1     MACRO
                +1   252                     ; no delay needed
                +1   253                     ENDM
                +1   254     
                +1   255     ;* ************************************************************************ **
                +1   256     ;*
                +1   257     ;*
                +1   258     ;* Select MOVX/MOVC for reading from flash pages
                +1   259     ;*
                +1   260     ;*
                +1   261     ;*
                +1   262     ;* ************************************************************************ */
                +1   263     
                +1   264                     ;*
                +1   265                     ;* 0; movx
                +1   266                     ;* 1: movc
                +1   267                     ;*
                +1   268                     $set  (FAR_ACCESS_METHOD = 1)
                +1   269     
                +1   270     
                +1   271     ;* ************************************************************************ **
                +1   272     ;*
                +1   273     ;*
                +1   274     ;*      XRAM definitions
                +1   275     ;*
                +1   276     ;*      Define absolute start address (XDATASTART) and length (XDATALEN) of
                +1   277     ;*      extern RAM (on-chip).
                +1   278     ;*
                +1   279     ;*      Used in startup.a51.
                +1   280     ;*
                +1   281     ;*
                +1   282     ;* ************************************************************************ */
                +1   283     
  E000          +1   284                     XDATASTART      EQU     0E000H
                +1   285     
  2000          +1   286                     XDATALEN        EQU     02000H
                +1   287     
                +1   288     
                +1   289     
A51 MACRO ASSEMBLER  H2IO                                                                 11/30/2021 16:22:20 PAGE     4

                +1   290     
                +1   291     
                +1   292     
                +1   293     
                +1   294     
                +1   295     
                +1   296     
                +1   297     
                +1   298     
                +1   299     
                +1   300     
                +1   301     ;* ************************************************************************ **
                +1   302     ;*
                +1   303     ;*
                +1   304     ;* Macro for initializing control pins for external memory
                +1   305     ;*
                +1   306     ;*
                +1   307     ;*
                +1   308     ;* ************************************************************************ */
                +1   309     
                +1   310                     ; This macro presets outputs for control of external memory.
                +1   311                     ; Used in startup.a51
                +1   312     STARTUP_XMEM    MACRO
                +1   313                     ENDM
                +1   314     
                +1   315     ;* ************************************************************************ **
                +1   316     ;*
                +1   317     ;*
                +1   318     ;* xxx
                +1   319     ;*
                +1   320     ;*
                +1   321     ;*
                +1   322     ;* ************************************************************************ */
                +1   323     
                +1   324     
                +1   325     
                     326     
                     327     NAME    H2IO
                     328     
                     329     $if  (USE_PI = 1)
                             EXTRN  CODE (_pi_write, _pi_read)
                             $else 
                     332     $if  (USE_SI = 1)
                             EXTRN  CODE (_spi_write, _spi_read)
                             $endif 
                     335     $endif 
                     336     
                     337     PUBLIC  _h2_read, _h2_write_val, _h2_write_addr
                     338     
                     339     
                     340     PROG    SEGMENT CODE
                     341     
----                 342             RSEG    PROG
                     343     
                     344     ;* ************************************************************************ */
                     345     ; ulong h2_read (ulong addr) small;
0000                 346     _h2_read:
                     347     ;* ------------------------------------------------------------------------ --
                     348     ;* Purpose     : Read a register from the SBA bus.
                     349     ;* Remarks     : R4 is MSB and R7 is LSB.
                     350     ;* Restrictions:
                     351     ;* See also    :
                     352     ;* Example     :
                     353     ; * ************************************************************************ */
                     354     $if  (USE_SFR = 1)
0000 8CFB            355             mov     RA_AD3, r4
A51 MACRO ASSEMBLER  H2IO                                                                 11/30/2021 16:22:20 PAGE     5

0002 8DFA            356             mov     RA_AD2, r5
0004 8EF9            357             mov     RA_AD1, r6
0006 8FF6            358             mov     RA_AD0_RD, r7
                     359     
0008 ACFF            360             mov     r4, RA_DA3
000A ADFE            361             mov     r5, RA_DA2
000C AEFD            362             mov     r6, RA_DA1
000E AFFC            363             mov     r7, RA_DA0
0010 22              364             ret
                     365     $endif 
                     366     
                     367     ;* ************************************************************************ */
                     368     ; void h2_write_addr (ulong addr) small;
0011                 369     _h2_write_addr:
                     370     ;* ------------------------------------------------------------------------ --
                     371     ;* Purpose     : Save register address for writing. To be followed by call
                     372     ;*               to _h2_write_ in order to complete the writing.
                     373     ;* Remarks     : Writing to a register has been split in two functions in
                     374     ;*               order to exploit the Keil c-compilers way of utilizing
                     375     ;*               registers for parameters.
                     376     ;* Restrictions: Use macro h2_write (in h2io.h) for access from c-modules.
                     377     ;* See also    : _h2_write_
                     378     ;* Example     :
                     379     ; * ************************************************************************ */
                     380             ;* Save register address for coming call to h2_write
                     381     $if  (USE_SFR = 1)        
0011 8CFB            382             mov     RA_AD3, r4    ;MSB
0013 8DFA            383             mov     RA_AD2, r5
0015 8EF9            384             mov     RA_AD1, r6
0017 8FF7            385             mov     RA_AD0_WR, r7 ;LSB
                     386             
                     387     $endif         
0019 22              388             ret
                     389     
                     390     ;* ************************************************************************ */
                     391     ; void h2_write_val (ulong value);
001A                 392     _h2_write_val:
                     393     ;* ------------------------------------------------------------------------ --
                     394     ;* Purpose     : Completes a writing.
                     395     ;* Remarks     : 
                     396     ;* Restrictions: _h2_write_addr must have been called before calling _h2_write_.
                     397     ;*               Use macro h2_write (in h2io.h) for access from c-modules.
                     398     ;* See also    : _h2_write_addr
                     399     ;* Example     :
                     400     ; * ************************************************************************ */
                     401     
                     402     $if  (USE_SFR = 1)
                     403     
001A 8CFF            404             mov     RA_DA3, r4  ;MSB
001C 8DFE            405             mov     RA_DA2, r5
001E 8EFD            406             mov     RA_DA1, r6
0020 8FFC            407             mov     RA_DA0, r7  ;LSB
                     408     
0022 22              409             ret
                     410     $endif 
                     411     
                     412             END
                             
                             
                             
                             
                             
                             
                             
                             
                             
A51 MACRO ASSEMBLER  H2IO                                                                 11/30/2021 16:22:20 PAGE     6

                             
                             
                             
                             
                             
                             
                             
                             
                             
A51 MACRO ASSEMBLER  H2IO                                                                 11/30/2021 16:22:20 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EPAGE_SEL. . . . .  D ADDR   00C0H   A   
ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
GPR. . . . . . . .  D ADDR   0080H   A   
GPR_0. . . . . . .  B ADDR   0080H.0 A   
GPR_1. . . . . . .  B ADDR   0080H.1 A   
GPR_2. . . . . . .  B ADDR   0080H.2 A   
GPR_3. . . . . . .  B ADDR   0080H.3 A   
GPR_4. . . . . . .  B ADDR   0080H.4 A   
GPR_5. . . . . . .  B ADDR   0080H.5 A   
GPR_6. . . . . . .  B ADDR   0080H.6 A   
GPR_7. . . . . . .  B ADDR   0080H.7 A   
H2IO . . . . . . .  N NUMB   -----       
IE . . . . . . . .  D ADDR   00A8H   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IP . . . . . . . .  D ADDR   00B8H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
MISO . . . . . . .  B ADDR   0090H.6 A   
MMAP . . . . . . .  D ADDR   00F2H   A   
MOSI . . . . . . .  B ADDR   0090H.5 A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PAGE_SEL . . . . .  D ADDR   00B0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PG_IFP_0 . . . . .  B ADDR   00B0H.4 A   
PG_IFP_1 . . . . .  B ADDR   00B0H.5 A   
PG_IFP_2 . . . . .  B ADDR   00B0H.6 A   
PG_IFP_3 . . . . .  B ADDR   00B0H.7 A   
PG_OP_0. . . . . .  B ADDR   00B0H.0 A   
PG_OP_1. . . . . .  B ADDR   00B0H.1 A   
PG_OP_2. . . . . .  B ADDR   00B0H.2 A   
PG_OP_3. . . . . .  B ADDR   00B0H.3 A   
PROG . . . . . . .  C SEG    0023H       REL=UNIT
PS . . . . . . . .  B ADDR   00B8H.4 A   
PSW. . . . . . . .  D ADDR   00D0H   A   
PT0. . . . . . . .  B ADDR   00B8H.1 A   
A51 MACRO ASSEMBLER  H2IO                                                                 11/30/2021 16:22:20 PAGE     8

PT1. . . . . . . .  B ADDR   00B8H.3 A   
PT2. . . . . . . .  B ADDR   00B8H.5 A   
PX0. . . . . . . .  B ADDR   00B8H.0 A   
PX1. . . . . . . .  B ADDR   00B8H.2 A   
RA_AD0_RD. . . . .  D ADDR   00F6H   A   
RA_AD0_WR. . . . .  D ADDR   00F7H   A   
RA_AD1 . . . . . .  D ADDR   00F9H   A   
RA_AD2 . . . . . .  D ADDR   00FAH   A   
RA_AD3 . . . . . .  D ADDR   00FBH   A   
RA_CTRL. . . . . .  D ADDR   00F4H   A   
RA_DA0 . . . . . .  D ADDR   00FCH   A   
RA_DA1 . . . . . .  D ADDR   00FDH   A   
RA_DA2 . . . . . .  D ADDR   00FEH   A   
RA_DA3 . . . . . .  D ADDR   00FFH   A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCK. . . . . . . .  B ADDR   0090H.7 A   
SCON . . . . . . .  D ADDR   0098H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
SPCR . . . . . . .  D ADDR   00D5H   A   
SPDR . . . . . . .  D ADDR   0086H   A   
SPSR . . . . . . .  D ADDR   00AAH   A   
SS . . . . . . . .  B ADDR   0090H.4 A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2 . . . . . . . .  B ADDR   0090H.0 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2EX . . . . . . .  B ADDR   0090H.1 A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WR . . . . . . . .  B ADDR   00B0H.6 A   
XDATALEN . . . . .  N NUMB   2000H   A   
XDATASTART . . . .  N NUMB   E000H   A   
_H2_READ . . . . .  C ADDR   0000H   R   SEG=PROG
_H2_WRITE_ADDR . .  C ADDR   0011H   R   SEG=PROG
_H2_WRITE_VAL. . .  C ADDR   001AH   R   SEG=PROG


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
