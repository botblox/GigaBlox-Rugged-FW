C51 COMPILER V9.60.0.0   INTERRUPT                                                         11/30/2021 16:22:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INTERRUPT
OBJECT MODULE PLACED IN ..\obj\interrupt.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\src\main\interrupt.c LARGE OPTIMIZE(9,SIZE) INCDIR(c:\keil\c51\inc\wi
                    -nbond;..\src\config;..\src\config\proj_opt;..\src\cli;..\src\main;..\src\switch;..\src\phy;..\src\util;..\src\switch\vts
                    -s_api\base;..\src\switch\vtss_api\base\ocelot;..\src\switch\include;..\src\lldp;..\src\snmp;..\src\sw_lacp;..\src\eee;..
                    -\src\eee\base\include;..\src\fan;..\src\led;..\src\loop) DEFINE(VTSS_ARCH_OCELOT,FERRET_F5,PROJ_OPT=0) DEBUG OBJECTEXTEN
                    -D PRINT(..\lst\interrupt.lst) TABS(2) OBJECT(..\obj\interrupt.obj)

line level    source

   1          /*
   2          
   3           Copyright (c) 2017 Microsemi Corporation "Microsemi".
   4          
   5           Permission is hereby granted, free of charge, to any person obtaining a copy
   6           of this software and associated documentation files (the "Software"), to deal
   7           in the Software without restriction, including without limitation the rights
   8           to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9           copies of the Software, and to permit persons to whom the Software is
  10           furnished to do so, subject to the following conditions:
  11          
  12           The above copyright notice and this permission notice shall be included in all
  13           copies or substantial portions of the Software.
  14          
  15           THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16           IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17           FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18           AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19           LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20           OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  21           SOFTWARE.
  22          
  23          */
  24          
  25          #include "common.h"     /* Always include common.h at the first place of user-defined herder files */
  26          #include "vtss_api_base_regs.h"
  27          #include "h2io.h"
  28          #include "timer.h"
  29          #include "uartdrv.h"
  30          #include "misc2.h"
  31          
  32          /*****************************************************************************
  33           *
  34           *
  35           * Public data
  36           *
  37           *
  38           *
  39           ****************************************************************************/
  40          
  41          
  42          /*****************************************************************************
  43           *
  44           *
  45           * Defines
  46           *
  47           *
  48           *
  49           ****************************************************************************/
  50          
  51          /*****************************************************************************
C51 COMPILER V9.60.0.0   INTERRUPT                                                         11/30/2021 16:22:16 PAGE 2   

  52           *
  53           *
  54           * Typedefs and enums
  55           *
  56           *
  57           *
  58           ****************************************************************************/
  59          
  60          /*****************************************************************************
  61           *
  62           *
  63           * Prototypes for local functions
  64           *
  65           *
  66           *
  67           ****************************************************************************/
  68          
  69          /*****************************************************************************
  70           *
  71           *
  72           * Local data
  73           *
  74           *
  75           *
  76           ****************************************************************************/
  77          
  78          /* ************************************************************************ */
  79          void ext_interrupt_init (void) small
  80          /* ------------------------------------------------------------------------ --
  81           * Purpose     : Enable external interrupts. Ext0 with low priority
  82           *               and Ext1 with high priority
  83           * Remarks     :
  84           * Restrictions:
  85           * See also    :
  86           * Example     :
  87           ****************************************************************************/
  88          {
  89   1      #if defined(VTSS_ARCH_LUTON26)
                  /* Enable interrupt output to 8051 */
                  H2_WRITE_MASKED(VTSS_ICPU_CFG_INTR_ICPU_IRQ1_ENA,
                  VTSS_F_ICPU_CFG_INTR_ICPU_IRQ1_ENA_ICPU_IRQ1_ENA,
                  VTSS_F_ICPU_CFG_INTR_ICPU_IRQ1_ENA_ICPU_IRQ1_ENA);
              
                  H2_WRITE_MASKED(VTSS_ICPU_CFG_INTR_ICPU_IRQ0_ENA,
                  VTSS_F_ICPU_CFG_INTR_ICPU_IRQ0_ENA_ICPU_IRQ0_ENA,
                  VTSS_F_ICPU_CFG_INTR_ICPU_IRQ0_ENA_ICPU_IRQ0_ENA);
              #endif // VTSS_ARCH_LUTON26
  99   1      
 100   1          /* Enable 8051 interrupt */
 101   1          PX1 = 1;  /* Set high priority for ext 1 */
 102   1          EX1 = 1;  /* Enable ext 1 interrupt */
 103   1      
 104   1          PX0 = 0;  /* Set low priority for ext 0 */
 105   1          EX0 = 1;  /* Enable ext 0 interrupt */
 106   1      }
 107          
 108          /* ************************************************************************ */
 109          void ext_1_interrupt (void) small interrupt 2 using 2
 110          /* ------------------------------------------------------------------------ --
 111           * Purpose     : Handle UART interrupts with high priority
 112           * Remarks     : ISR could only call H2_READ, H2_WRITE, H2_WRITE_MASKED, no
 113           *               other function is shared with main
C51 COMPILER V9.60.0.0   INTERRUPT                                                         11/30/2021 16:22:16 PAGE 3   

 114           * Restrictions:
 115           * See also    :
 116           * Example     :
 117           ****************************************************************************/
 118          {
 119   1      #if defined(VTSS_ARCH_OCELOT)
 120   1      #define INT_UART_INDEX   6
 121   1      
 122   1          ulong ident;
 123   1      
 124   1          H2_READ(VTSS_ICPU_CFG_INTR_DST_INTR_IDENT(1), ident);
 125   1      #ifndef NO_DEBUG_IF
 126   1          if(test_bit_32(INT_UART_INDEX, &ident)) {
 127   2              // UART interrupt
 128   2              uart_interrupt();
 129   2              H2_WRITE_MASKED(VTSS_ICPU_CFG_INTR_INTR_STICKY,
 131   2                              bit_mask_32(INT_UART_INDEX),
 131   2                              bit_mask_32(INT_UART_INDEX));
 132   2          }
 133   1      #endif // NO_DEBUG_IF
 134   1      
 135   1      #elif defined(VTSS_ARCH_LUTON26)
                  ulong ident;
                  H2_READ(VTSS_ICPU_CFG_INTR_ICPU_IRQ1_IDENT, ident);
              #ifndef NO_DEBUG_IF
                  if(test_bit_32(6, &ident)) {
                      // UART interrupt
                      uart_interrupt();
                      H2_WRITE(VTSS_ICPU_CFG_INTR_INTR, VTSS_F_ICPU_CFG_INTR_INTR_UART_INTR);
                  }
              #endif // NO_DEBUG_IF
              #endif // VTSS_ARCH_OCELOT
 146   1      }
 147          
 148          /* ************************************************************************ */
 149          void ext_0_interrupt (void) small interrupt 0 using 1
 150          /* ------------------------------------------------------------------------ --
 151           * Purpose     : Handle timer and exteral interrupts with low priority
 152           * Remarks     : ISR could only call H2_READ, H2_WRITE, H2_WRITE_MASKED, no
 153           *               other function is shared with main
 154           * Restrictions:
 155           * See also    :
 156           * Example     :
 157           ****************************************************************************/
 158          {
 159   1      #if defined(VTSS_ARCH_OCELOT)
 160   1      #define INT_TIMER_1_INDEX   4
 161   1      
 162   1          ulong ident;
 163   1          H2_READ(VTSS_ICPU_CFG_INTR_DST_INTR_IDENT(0), ident);
 164   1      
 165   1          if(test_bit_32(INT_TIMER_1_INDEX, &ident)) {
 166   2              // Timer 1 interrupt
 167   2              timer_1_interrupt();
 168   2              H2_WRITE_MASKED(VTSS_ICPU_CFG_INTR_INTR_STICKY,
 170   2                               bit_mask_32(INT_TIMER_1_INDEX),
 170   2                               bit_mask_32(INT_TIMER_1_INDEX));
 171   2          }
 172   1      
 173   1      #elif defined(VTSS_ARCH_LUTON26)
                  ulong ident;
                  H2_READ(VTSS_ICPU_CFG_INTR_ICPU_IRQ0_IDENT, ident);
C51 COMPILER V9.60.0.0   INTERRUPT                                                         11/30/2021 16:22:16 PAGE 4   

                  if(test_bit_32(8, &ident)) {
                      // Timer 1 interrupt
                      timer_1_interrupt();
                      H2_WRITE(VTSS_ICPU_CFG_INTR_INTR, VTSS_F_ICPU_CFG_INTR_INTR_TIMER1_INTR);
                  }
              #endif // VTSS_ARCH_OCELOT
 182   1      }
 183          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    234    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
